A형 알고리즘 특강(04-05)

문제를 푸는 것은 당연하다. 각 문제를 제한된 시간내에 완벽하게 풀어야 한다. 생각도 하지 말고 손이 먼저 나가야 한다. for문 을 사용하는데 생각하고 사용하는가...

머리쓰지마라. 머리 쓰는 것은 모든 기초가 완벽하게 된 이후이다. 지겨워라 지겨워라. 라는 생각을 해야함

BFS visited 푸는 문제 -> 3분 컷

출발점이 여러개인 BFS -> 3분 컷


섬의 크기 구하는 문제 -> 5분 컷

섬 몇 개가 떠다니는지 -> 5분 컷

A부터 B까지 미로 최소 거리 -> 5분 컷

A에서 B를 갔다가 C로 가야함 -> A에서 B로 가는 거리 + B-> C로 가는 거리 -> 5분컷



04-06일 특강 내용 정리

1. 기본 문제 (바이러스 문제, 토마토 문제.. 등 여러가지로 불림)
시작 지점에서 초록색 섬으로 가려면 최소 몇번 이동해야 할까
( 제한시간 : 3분 )

BFS 돌릴 때 발견하자말자 BFS가 종료되는 경우에는
반드시 BFS는 함수로 구현해야함
return으로 바로 종료되기 때문에!

함수로 뺄 때 주의사항 : 초기화를 실수하지 않기 



2. 섬과 섬 (천지창조)
(제한시간 10분)
섬 두 개 사이의 최소 거리를 구함

1. 출발점(0,0)에서 부터 시작하여 한 섬에 연결되어 있는 모든 좌표를 BFS로 돈다
-> 모든 좌표를 queue에 담아줌!

이후 출발점이 여러개인 bfs를 푸는 방법과 동일
총 bfs 2번으로 종료된다.


3. 휴먼 에러 관련 (8방향 BFS)

BFS는 휴먼에러가 발생함 -> 사람으로 하여금 변수가 비슷해보여서 착각하는 경우를 뜻함

자주하는 실수 : 
1. dy, dx 값을 [(0, 1) (0, -1) (1, 0) (-1, 0)] 으로 설정해줘야 하는데 [(0, 1) (0, -1) (1, 0) (1, 0)] 이렇게 실수함
 
2. if 0 <= ny < N and 0 <= nx < N으로 설정해야하는데  if 0 <= ny < N and 0 <= ny < N 로 실수함

i와 j를 실수해서 혼동하는 경우가 많으니까 -> i, j 대신 y, x를 사용해라!

N,M 대신 width와 height 사용하기!

휴먼에러 조심해서 A에서 B까지 이동하는 
8방향(대각선으로도 나감)으로 나가는 바이러스 찾기 (5분) -> 추천문제 : 정읍 장기, 백준 나이트


4. 벽 부수기 -> 월말 평가 2번 문제
( 제한시간 : 10분 )
미로찾기에 변형문제!!

벽 두개 부수고 이동하기
접근 방법: 

1. BFS로 푸는데 queue에 [y, x cnt]를 추가시켜야 하고 visited[y][x][cnt]이렇게 해야한다!

2. 조합 + BFS

5번 로봇의 이동( 로봇청소기 )
( 제한시간 : 10분 )

앞으로 한칸 -> 90도 회전, -90도 회전
visited[y][x][direction] 이렇게 4번의 1번 방법처럼 풀어야 함
(같은 방향으로 다시 반복하면 안되니까!!)
